{"version":3,"sources":["components/button/Button.module.css","components/imageGalleryItem/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/imageGallery/ImageGallery.module.css","components/searchbar/SearchBar.module.css","components/button/Button.js","components/modal/Modal.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/loader/Loader.js","components/searchbar/SearchBar.js","servicesApi/Api.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","onClick","className","s","ButtonWraper","type","modalRoot","document","querySelector","Modal","modalImage","tags","onToggleModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Orerlay","currentTarget","target","src","alt","PropTypes","func","string","ImageGalleryItem","id","previewImg","showModal","onImgClick","largeImgURL","ImageGalleryItemImage","ImageGallery","imageListContent","images","useState","setShowModal","modalImg","setModalImg","toggleModal","img","dataset","map","webformatURL","largeImageURL","LoaderComp","color","height","width","timeout","Searchbar","onSubmit","query","setQuery","SearchForm","preventDefault","trim","alert","SearchFormButton","SearchFormButtonLabel","name","value","onChange","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","key","axios","defaults","baseURL","params","page","a","get","hits","data","fetchPixabayImgs","App","setPage","setImages","isLoading","setIsLoading","fetchImages","pixabayApi","scrollWindow","console","log","scrollTo","top","documentElement","scrollHeight","behavior","loadMoreImages","length","prev","Loader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9cf40976.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__UUCg_\",\"ButtonWraper\":\"Button_ButtonWraper__38hlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__18xn0\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__193Xf\",\"ImageGalleryItemIimage\":\"ImageGalleryItem_ImageGalleryItemIimage__3bbKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3zur2\",\"Modal\":\"Modal_Modal__JzWj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2J8yT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__3lSOb\",\"SearchForm\":\"SearchBar_SearchForm__3N3fa\",\"SearchFormButton\":\"SearchBar_SearchFormButton__m9A83\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__hWnf9\",\"SearchFormInput\":\"SearchBar_SearchFormInput__JWKWo\"};","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button ({ onClick }) {\n  return (\n    <div className={s.ButtonWraper}>\n      <button className={s.Button} type=\"button\"  onClick={() => onClick()}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;","\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal ({ modalImage, tags, onToggleModal}) {\n   useEffect(() => {\n     window.addEventListener(\"keydown\", handleKeyDown);\n     return () => {\n       window.removeEventListener(\"keydown\", handleKeyDown);\n     }\n   })\n\n\nconst handleKeyDown = (e) => {\n  if (e.code === \"Escape\") {\n    onToggleModal();\n  }\n};\n\nconst handleBackdropClick = (e) => {\n  if (e.currentTarget === e.target) {\n    onToggleModal();\n  }\n};\n\nreturn createPortal(\n  <div className={s.Orerlay} onClick={handleBackdropClick}>\n    <div className={s.Modal}>\n      <img src={modalImage} alt={tags}/>\n    </div>\n  </div>,\n   modalRoot\n);\n}\n\nModal.PropTypes = {\n  onToggleModal: PropTypes.func,\n  modalImage: PropTypes.string,\n  tags: PropTypes.string,\n};\n\nexport default Modal;","import s from './ImageGalleryItem.module.css';\nimport Modal from '../modal/Modal';\nimport PropTypes from 'prop-types';\n\nfunction ImageGalleryItem  ({ \n  id,\n  previewImg,\n  tags,\n  onToggleModal,\n  showModal,\n  modalImage,\n  onImgClick,\n  largeImgURL,\n}) {\n  return (\n    <>\n    <li className={s.ImageGalleryItem} key={id}>\n      <img\n        data-img={largeImgURL}\n        src={previewImg}\n        alt={tags}\n        className={s.ImageGalleryItemImage}\n        onClick={onImgClick}\n      />\n    </li>\n     {showModal && (\n       <Modal modalImage={modalImage} onToggleModal={onToggleModal} tags={tags} />\n     )}\n    </>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  previewImg: PropTypes.string,\n  tags: PropTypes.string,\n  onToggleModal: PropTypes.func,\n  showModal: PropTypes.bool,\n  modalImage: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;","import { useState } from 'react';\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ImageGallery({ images }) {\n  const [showModal, setShowModal] = useState(false);\n  const [modalImg, setModalImg] = useState(\"\");\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onImgClick = (e) => {\n    const { img } = e.target.dataset;\n    setModalImg(img);\n    toggleModal();\n  };\n\n  let imageListContent;\n\n  if (images) {\n    imageListContent = (\n      <ul className={s.ImageGallery}>\n        {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n          <ImageGalleryItem\n            largeImageURL={largeImageURL}\n            key={id}\n            previewImg={webformatURL}\n            tags={tags}\n            onToggleModal={toggleModal}\n            showModal={showModal}\n            onImgClick={onImgClick}\n            modalImg={modalImg}\n          />\n        ))}\n      </ul>\n    );\n  } \n  return <div>{imageListContent}</div>;\n}\n\nImageGallery.propTypes = {\n  onImgClick: PropTypes.func,\n  onToggleModal: PropTypes.func,\n  showModal: PropTypes.bool,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      webformatURL: PropTypes.string,\n      tags: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageGallery;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nfunction LoaderComp () {\n  return (\n    <div className=\"Button-wraper\">\n      <Loader\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n};\n\nexport default LoaderComp;","import React, { useState } from 'react';\nimport s from './SearchBar.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({ onSubmit }) {\n  const[query, setQuery] = useState('');\n\n  const handleQueryChange = (e) => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (query.trim() === \"\") {\n      return alert(\"Enter your query!\");\n    }\n    onSubmit(query);\n    setQuery('');\n  }\n  \n  return (\n    <div>\n      <section className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n          <input\n            name=\"query\"\n            value={query}\n            onChange={handleQueryChange}\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form> \n      </section>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","\nimport axios from \"axios\";\n\nconst key = '23250657-60999439b4e5e927be309f9a4';\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\nconst params = \"image_type=photo&orientation=horizontal&per_page=12\";\n\nasync function fetchPixabayImgs(query, page) {\n  const {\n    data: { hits },\n  } = await axios.get(`?&q=${query}&page=${page}&key=${key}&${params}`);\n  return hits;\n}\n\nexport default fetchPixabayImgs;","import React, { useState, useEffect } from 'react';\nimport Button from './components/button/Button';\nimport ImageGallery from './components/imageGallery/ImageGallery';\nimport Loader from './components/loader/Loader';\nimport Searchbar from './components/searchbar/SearchBar';\nimport pixabayApi from './servicesApi/Api';\n// import PropTypes from 'prop-types';\n\nfunction App() {\n  const[query, setQuery] = useState(\"\");\n  const[page, setPage] = useState(1);\n  const[images, setImages] = useState([])\n  const[isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if(!query) return;\n    setIsLoading(true);\n    const fetchImages = async () => {\n      try {\n        const data = await pixabayApi(query, page);\n        setImages((images) => [...images, ...data]);\n        if (page !== 1) {\n          scrollWindow();\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchImages();\n   }, [page, query]);\n\n   const scrollWindow = () => {\n     window.scrollTo({\n       top: document.documentElement.scrollHeight,\n       behavior: \"smooth\",\n     })\n   };\n\n   const loadMore = () => {\n     setIsLoading(!isLoading);\n     setPage((prev) => prev + 1);\n     setIsLoading(isLoading);\n   };\n\n   const handleFormSubmit = (query) => {\n     setQuery(query);\n     setPage(1);\n     setImages([]);\n   }\n   \n   const loadMoreImages = images.length > 0 && images.length >= 12;\n\n   return (\n     <div>\n      <Searchbar onSubmit={handleFormSubmit}/>\n      <ImageGallery images={images}/>\n      {loadMoreImages && <Button onClick={loadMore} />}\n      {isLoading && <Loader />}\n     </div>\n   )\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}